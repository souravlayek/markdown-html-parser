"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDomTreeFromMarkdown=exports.parseMarkdownToHTML=void 0;const htmlTokenizer_1=__importDefault(require("./htmlTokenizer"));class MarkdownParser{constructor(e){this.markdown=e,this.codeBlockPlaceholders=[]}parse(){let e=this.protectCodeBlocks(this.markdown);return e=this.parseHeadings(e),e=this.parseBlockquotes(e),e=this.parseLists(e),e=this.parseBold(e),e=this.parseItalic(e),e=this.parseImages(e),e=this.parseLinks(e),e=this.parseInlineCode(e),e=this.parseParagraphs(e),e=this.restoreCodeBlocks(e),e}protectCodeBlocks(e){return e.replace(/```(\w+)?\s*([\s\S]*?)```/g,((e,r,o)=>{const s=r?` class="language-${r}"`:"",t=`\x3c!--codeblock${this.codeBlockPlaceholders.length}--\x3e`;return this.codeBlockPlaceholders.push(`<pre><code${s}>${o}</code></pre>`),t}))}restoreCodeBlocks(e){return this.codeBlockPlaceholders.forEach(((r,o)=>{const s=`\x3c!--codeblock${o}--\x3e`;e=e.replace(s,r)})),e}parseHeadings(e){return e.replace(/^(#{1,6})\s*(.+)$/gm,((e,r,o)=>{const s=r.length;return`<h${s}>${o}</h${s}>`}))}parseBold(e){return e.replace(/\*\*(.+?)\*\*/g,"<strong>$1</strong>")}parseItalic(e){return e.replace(/(\*|_)(.+?)\1/g,"<em>$2</em>")}parseLinks(e){return e.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2">$1</a>')}parseImages(e){return e.replace(/!\[(.*?)\]\((.+?)\)/g,'<img src="$2" alt="$1"/>')}parseInlineCode(e){return e.replace(/`(.+?)`/g,"<i>$1</i>")}parseParagraphs(e){return e.replace(/^(?!<.*>)(.+)$/gm,"<p>$1</p>")}parseBlockquotes(e){return e.replace(/^>\s*(.+)$/gm,"<blockquote>$1</blockquote>")}parseLists(e){return e=(e=(e=e.replace(/^(\s*)- (.+)$/gm,((e,r,o)=>{const s=r.length/2;return`<ul>${" ".repeat(2*s)}<li>${o}</li></ul>`}))).replace(/^(\s*)\d+\. (.+)$/gm,((e,r,o)=>{const s=r.length/2;return`<ol>${" ".repeat(2*s)}<li>${o}</li></ol>`}))).replace(/<\/(ul|ol)>\s*<\1>/g,"")}}function parseMarkdownToHTML(e){return new MarkdownParser(e).parse()}function getDomTreeFromMarkdown(e){const r=parseMarkdownToHTML(e);return new htmlTokenizer_1.default(r).getDomTree()}exports.default=MarkdownParser,exports.parseMarkdownToHTML=parseMarkdownToHTML,exports.getDomTreeFromMarkdown=getDomTreeFromMarkdown;